WITH RUNNER_ORDERS_V2 AS (SELECT 
	CASE WHEN A.ORDER_ID IS NULL THEN 0 ELSE A.ORDER_ID END AS ORDER_ID,
	B.RUNNER_ID,
	CASE WHEN CANCELLATION LIKE '%CANCEL%' OR PICKUP_TIME IS NULL THEN 0 ELSE 1 END AS PEDIDO_OK, 
	CASE WHEN EXCLUSIONS='' OR EXCLUSIONS IS NULL OR EXCLUSIONS='NULL'THEN 0 ELSE 1 END AS EXCLUSIONES, 
	CASE WHEN EXTRAS='' OR EXTRAS IS NULL OR EXTRAS='NULL' THEN 0 ELSE 1 END AS EXTRAS
FROM CASE02.RUNNER_ORDERS A
RIGHT OUTER JOIN CASE02.RUNNERS B ON A.RUNNER_ID  =B.RUNNER_ID
LEFT OUTER JOIN CASE02.CUSTOMER_ORDERS C ON A.ORDER_ID = C.ORDER_ID),

PEDIDOS AS (SELECT 
	RUNNER_ID,
	CAST(COUNT (DISTINCT CASE WHEN PEDIDO_OK = 1 THEN ORDER_ID ELSE NULL END) AS FLOAT) AS PEDIDO_OK,
	CAST(COUNT (DISTINCT CASE WHEN ORDER_ID <> 0 THEN ORDER_ID ELSE NULL END) AS FLOAT) AS PEDIDO,
	CAST(COUNT(CASE WHEN PEDIDO_OK = 1 AND ORDER_ID <> 0 AND PEDIDO_OK =1 THEN ORDER_ID ELSE NULL END) AS FLOAT) AS N_PIZZAS,
	CAST(SUM(CASE WHEN PEDIDO_OK = 1 AND ORDER_ID <> 0 AND (EXCLUSIONES = 1 OR EXTRAS = 1) THEN 1 ELSE 0 END ) AS FLOAT) AS N_PIZZA_MODIFICADA
	
FROM RUNNER_ORDERS_V2
GROUP BY RUNNER_ID)

SELECT
	RUNNER_ID,
	PEDIDO_OK,
	N_PIZZAS,
	CASE WHEN PEDIDO = 0 THEN 0 ELSE ROUND(PEDIDO_OK/PEDIDO * 100,2) END AS P_EXITO,
	CASE WHEN N_PIZZAS = 0 THEN 0 ELSE ROUND(N_PIZZA_MODIFICADA/N_PIZZAS * 100,2) END AS P_MODIFICADAS
FROM PEDIDOS;

/*
Corrección Pablo: ¡Todo perfecto!

Resultado: OK. Obtienes justo lo que se pedía.
Código: OK. Genial por la creación de flags y los cálculos realizados.
Legibilidad: OK. De nuevo, que gusto da leer un código tan bien ordenado y tabulado.

¡Enhorabuena!
*/
