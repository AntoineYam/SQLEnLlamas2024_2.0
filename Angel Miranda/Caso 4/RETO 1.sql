--CREO UNA FUNCION PARA ALMACENAR LOS REPETIDOS
CREATE OR ALTER PROCEDURE AMR_EJERCICIO_4_1_PROCEDURE

@NOMBRE_BD VARCHAR(20),
@NOMBRE_ESQUEMA VARCHAR(10),
@NOMBRE_TABLA VARCHAR(20)

AS

BEGIN

DECLARE @RESULTADO AS VARCHAR(100)
DECLARE @NUM_REP_P_DETAIL AS INTEGER
DECLARE @NUM_REP_P_HIER AS INTEGER
DECLARE @NUM_REP_P_PRICE AS INTEGER
DECLARE @NUM_REP_SALES AS INTEGER

BEGIN

IF @NOMBRE_BD <> 'SQL_EN_LLAMAS'

	SET @RESULTADO = 'Inserte una BD correcta (SQL_EN_LLAMAS)'

ELSE IF @NOMBRE_ESQUEMA <> 'CASE04'

	SET @RESULTADO = 'Inserte un esquema correcto (CASE04)'

ELSE IF @NOMBRE_TABLA NOT IN ('PRODUCT_DETAILS','PRODUCT_HIERARCHY','PRODUCT_PRICES','SALES')
	
	SET @RESULTADO = 'La tabla introducida no existe'

ELSE IF @NOMBRE_TABLA IN ('PRODUCT_DETAILS','CASE04.PRODUCT_DETAILS')
	
	BEGIN
		SELECT
			@NUM_REP_P_DETAIL = COALESCE(COUNT(*),0)
		FROM (SELECT 
				PRODUCT_ID,
				COUNT(*) AS REPETIDOS
			FROM CASE04.PRODUCT_DETAILS
			GROUP BY 
				PRODUCT_ID
			HAVING COUNT(*) > 1)REPETIDOS_P_DETAIL
		SET @RESULTADO = 'La tabla product_details tiene un total de ' + CAST(@NUM_REP_P_DETAIL AS VARCHAR(10)) + ' registros duplicados.'
	END

ELSE IF @NOMBRE_TABLA IN ('PRODUCT_HIERARCHY','CASE04.PRODUCT_HIERARCHY')
	
	BEGIN
		SELECT
			@NUM_REP_P_HIER = COALESCE(COUNT(*),0)
		FROM (SELECT 
				ID,
				COUNT(*) AS REPETIDOS
			FROM CASE04.PRODUCT_HIERARCHY
			GROUP BY 
				ID
			HAVING COUNT(*) > 1)REPETIDOS_P_HIERARCHY
		SET @RESULTADO = 'La tabla product_hierarchy tiene un total de ' + CAST(@NUM_REP_P_HIER AS VARCHAR(10)) + ' registros duplicados.'
	END

ELSE IF @NOMBRE_TABLA IN ('PRODUCT_PRICES','CASE04.PRODUCT_PRICES')
	BEGIN
		SELECT
			@NUM_REP_P_PRICE = COALESCE(COUNT(*),0)
		FROM (SELECT 
				ID,
				COUNT(*) AS REPETIDOS
			FROM CASE04.PRODUCT_PRICES
			GROUP BY 
				ID
			HAVING COUNT(*) > 1)REPETIDOS_P_HIERARCHY
		SET @RESULTADO = 'La tabla product_prices tiene un total de ' + CAST(@NUM_REP_P_PRICE AS VARCHAR(10)) + ' registros duplicados.'
	END

ELSE IF @NOMBRE_TABLA IN ('SALES','CASE04.SALES')
	BEGIN	
		SELECT
			@NUM_REP_SALES = COALESCE(COUNT(*),0)
		FROM (SELECT 
				PROD_ID,
				TXN_ID,
				COUNT(*) AS REPETIDOS
			FROM CASE04.SALES
			GROUP BY 
				PROD_ID,
				TXN_ID
			HAVING COUNT(*) > 1)REPETIDOS_SALES
		SET @RESULTADO = 'La tabla sales tiene un total de ' + CAST(@NUM_REP_SALES AS VARCHAR(10)) + ' registros duplicados.'
	END
END
SELECT @RESULTADO AS RESULTADO
END;

--PRUEBAS DEL PROCEDURE
EXECUTE AMR_EJERCICIO_4_1_PROCEDURE 'SQL_EN_LLAMAS','CASE04','PRODUCT_DETAILS';
EXECUTE AMR_EJERCICIO_4_1_PROCEDURE 'SQL_EN_LLAMAS','CASE04','SALES';
EXECUTE AMR_EJERCICIO_4_1_PROCEDURE 'SQL_FRESQUITO','CASE04','SALES';
EXECUTE AMR_EJERCICIO_4_1_PROCEDURE 'SQL_EN_LLAMAS','CASE03','SALES';

--BORRADO DEL PROCEDURE
DROP PROCEDURE IF EXISTS AMR_EJERCICIO_4_1;
